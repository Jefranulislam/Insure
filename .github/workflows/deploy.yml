name: Build and Release

on:
  push:
    tags:
      - 'v*.*.*'  # Triggers on version tags like v1.0.0
  workflow_dispatch:  # Allows manual trigger

jobs:
  build_and_release:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.35.1'
        
    - name: Get dependencies
      run: flutter pub get
      
    - name: Build web
      run: flutter build web --release
      
    - name: Build APK
      run: flutter build apk --release
      
    - name: Build App Bundle
      run: flutter build appbundle --release
      
    - name: Get version from tag
      id: get_version
      run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
      
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.get_version.outputs.VERSION }}
        release_name: Release ${{ steps.get_version.outputs.VERSION }}
        draft: false
        prerelease: false
        body: |
          ## What's New
          - üöÄ New release of INSURE app
          - üì± Android APK available for download
          - üåê Web version deployed
          
          ## Downloads
          - **Android**: Download the APK below
          - **Web**: Visit https://yourusername.github.io/insure-app/
          
          ## Installation
          1. Download the APK file
          2. Enable "Unknown sources" in Android settings
          3. Install the APK
          
    - name: Upload APK to Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./build/app/outputs/flutter-apk/app-release.apk
        asset_name: insure-app-${{ steps.get_version.outputs.VERSION }}.apk
        asset_content_type: application/vnd.android.package-archive
        
    - name: Upload App Bundle to Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./build/app/outputs/bundle/release/app-release.aab
        asset_name: insure-app-${{ steps.get_version.outputs.VERSION }}.aab
        asset_content_type: application/octet-stream
